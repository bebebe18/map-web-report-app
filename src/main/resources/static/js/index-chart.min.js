/**
 * Script for chart in index page
 */

$(document).ready(
		function(){
			$.get(window.location.href+"/api/chart/transactionByChannel", function(data, status){
				//console.log(data["channels"]);
				//console.log(data["amounts"]);
				//console.log(data);
				//console.log(data["period"]);
				//console.log(data["dataset"]);
				//console.log(data["borderColors"]);
				
				document.getElementById("amountSalesYtd").innerHTML = data["amountSalesYtd"].toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
				document.getElementById("numberTransactionYtd").innerHTML = data["numberTransactionYtd"].toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
				document.getElementById("amountReturnYtd").innerHTML = data["amountReturnYtd"].toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
				document.getElementById("numberReturnYtd").innerHTML = data["numberReturnYtd"].toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
					
				Chart.defaults.global.defaultFontFamily='-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif',
				Chart.defaults.global.defaultFontColor="#292b2c";
				Chart.defaults.global.elements.line.fill = false;
				
				var ctx = document.getElementById("myBarChartSalesYTD"),
				myBarChart = new Chart(
					ctx,
					{
						type: "bar",
						data:{
							labels: data["salesChannelsYtd"],
							datasets:[{
								label: "Net Amount",					
								//backgroundColor:['#1293D6', '#fa2525', '#006BB6', '#ff9312','#48c9b0','#58d68d','#f1c40f','#e67e22','#eb984e','#839192','#2e4053','#145a32', '#1b4f72', '#9a7d0a','#641e16','#186a3b'],
								backgroundColor: data["borderColors"],
								borderColor:"rgba(2,117,216,1)",
								data: data["salesAmountYtd"]
							}]
						},
						options:{
							tooltips:{
								callbacks:{
									label:function(tooltipItems, data) {
								        return 'Net Amount: '+data.datasets[0].data[tooltipItems.index].toLocaleString();
									}
								}//end callbacks
							},//end tooltips
							scales: {
								xAxes:[{time:{unit:"channel"},gridLines:{display:!1},ticks:{maxTicksLimit:10}}],
								yAxes:[{
									ticks:{
										min: 0,
										maxTicksLimit:10,
										//below code to show thousand separator in y axes
										callback: function(value, index, values) {
									          return value.toLocaleString();
									        }
									},
									gridLines:{display:!0},
								}]
								//yAxes:[{ticks:{min: 0, max:Math.max(...data["salesAmountYtd"]) ,maxTicksLimit:10},gridLines:{display:!0}}]
								//yAxes:[{ticks:{min: 10000000, max:40000000 ,maxTicksLimit:100},gridLines:{display:!0}}]
							},
							legend:{display:!1}
						}
					}
				),
				ctx = document.getElementById("myPieChartTransactionsYTD"),
				
				myPieChart = new Chart(ctx,{
					type: "pie",
					data: {
						labels: data["transactionsChannelsYtd"],
						datasets:[{
							data: data["numberOfTransactionsYtd"],
							backgroundColor: data["borderColors"],
							//backgroundColor: ['#1293D6','#fa2525', '#006BB6', '#ff9312','#48c9b0','#58d68d','#f1c40f','#e67e22','#eb984e','#839192','#2e4053','#145a32', '#1b4f72', '#9a7d0a','#641e16','#186a3b']
						}]
					},
					options:{
						tooltips:{
							callbacks:{
								label:function(tooltipItems, data) {
							        return data.labels[tooltipItems.index]+': ' +data.datasets[0].data[tooltipItems.index].toLocaleString();
								}
							}//end callbacks
						},//end tooltips
					}//end options
				}),	
				ctx = document.getElementById("myLineChartTransactionsYTD"),
				
			
				myLineChart = new Chart(ctx,{
					type: "line",
					data: {
						
						labels: data["period"],
						datasets: data["dataset"]
					},
					options:{
						tooltips:{
							mode: 'index',
							intersect: false,
							callbacks:{
								label:function(tooltipItems, data) {
									//data.labels[tooltipItems.index] 
							        //return data.datasets[tooltipItems.datasetIndex].label+ ": " + data.datasets[0].data[tooltipItems.index].toLocaleString();
									return data.datasets[tooltipItems.datasetIndex].label+ ": " + data.datasets[tooltipItems.datasetIndex].data[tooltipItems.index].toLocaleString();
								}
							}//end callbacks
						},//end tooltips
						hover: {
							mode: 'index',
							intersect: false
						},//end hover
					    scales: {
					        xAxes: [{
//					          time: {
//					            unit: 'date'
//					          },
//					          gridLines: {
//					            display: false
//					          },
					          ticks: {
					        	beginAtZero: false,
					            maxTicksLimit: 13,
					          }
					        }],
					        yAxes: [{
					          ticks: {
					            min: 0,
					            labelOffset: 1,
					            maxTicksLimit: 10,
					            //below code to show thousand separator in y axes
					            callback: function(value, index, values) {
					                return value.toLocaleString();
					              }
					          },
					          gridLines: {
					            color: "rgba(0, 0, 0, .125)",
					          }
					        }],
					      },
					      legend: {
					        display: true
					      }
						
					}
					
				});
			
			})

		});



















